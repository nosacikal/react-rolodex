{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","item","id","alt","name","email","CardList","list","map","SearchBox","handleChange","placeholder","type","onChange","App","state","monsters","searchField","fetch","then","response","json","users","setState","this","filteredMonster","filter","monster","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAceA,EAbF,SAACC,GACZ,OACE,sBAAKC,UAAU,kBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,KAAKC,GAArC,0BACHC,IAAI,KAEN,6BAAKL,EAAMG,KAAKG,OAChB,4BAAIN,EAAMG,KAAKI,YCINC,G,MAVE,SAACR,GAChB,OACE,qBAAKC,UAAU,aAAf,SACGD,EAAMS,KAAKC,KAAI,SAACP,GAAD,OACd,cAAC,EAAD,CAAoBA,KAAMA,GAAfA,EAAKC,WCMTO,G,MAXG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,aAAcC,EAAkB,EAAlBA,YACjC,OACE,uBACEZ,UAAU,SACVa,KAAK,SACLC,SAAUH,EACVC,YAAaA,MCHEG,E,kDACnB,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXC,SAAU,GACVC,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKC,SAAS,CAAEP,SAAUM,S,oBAG/C,WAAU,IAAD,SAC2BE,KAAKT,MAA/BC,EADD,EACCA,SAAUC,EADX,EACWA,YACZQ,EAAkBT,EAASU,QAAO,SAACC,GAAD,OACtCA,EAAQvB,KAAKwB,cAAcC,SAASZ,EAAYW,kBAOlD,OACE,sBAAK7B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWY,YAAY,kBAAkBD,aAPxB,SAACoB,GACpB,EAAKP,SAAS,CAAEN,YAAaa,EAAEC,OAAOC,WAOpC,cAAC,EAAD,CAAUzB,KAAMkB,W,GA9BSQ,aCOlBC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BZ,M","file":"static/js/main.e16d5365.chunk.js","sourcesContent":["import './card.styles.css'\r\nconst Card = (props) => {\r\n  return (\r\n    <div className='card__container'>\r\n      <img\r\n        src={`https://robohash.org/${props.item.id}?set=set2&size=180x180`}\r\n        alt=''\r\n      />\r\n      <h2>{props.item.name}</h2>\r\n      <p>{props.item.email}</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import Card from '../card/card.component'\r\nimport './card-list.styles.css'\r\n\r\nconst CardList = (props) => {\r\n  return (\r\n    <div className='card__list'>\r\n      {props.list.map((item) => (\r\n        <Card key={item.id} item={item} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardList\r\n","import './search-box.styles.css'\r\n\r\nconst SearchBox = ({ handleChange, placeholder }) => {\r\n  return (\r\n    <input\r\n      className='search'\r\n      type='search'\r\n      onChange={handleChange}\r\n      placeholder={placeholder}\r\n    />\r\n  )\r\n}\r\n\r\nexport default SearchBox\r\n","import React, { Component } from 'react'\nimport './App.css'\nimport CardList from './components/card-list/card-list.component'\nimport SearchBox from './components/search-box/search-box.component'\n\nexport default class App extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      monsters: [],\n      searchField: '',\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }))\n  }\n\n  render() {\n    const { monsters, searchField } = this.state\n    const filteredMonster = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n\n    const handleChange = (e) => {\n      this.setState({ searchField: e.target.value })\n    }\n\n    return (\n      <div className='App'>\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder='search monsters' handleChange={handleChange} />\n        <CardList list={filteredMonster} />\n      </div>\n    )\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}